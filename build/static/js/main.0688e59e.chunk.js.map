{"version":3,"sources":["components/Header.js","components/DynamicTop.js","urls.js","components/Row.js","App.js","index.js"],"names":["Container","styled","div","Logo","img","User","Top","Header","className","src","Image","Desc","Button","button","Title","h1","DynamicTop","random","poster_path","original_title","overview","API_KEY","requests","fetchtrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","axios","get","request","data","results","fetchData","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","baseURL","App","randomMovie","setRandomMovie","findRandomMovie","randomNo","Math","floor","res","err","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0688e59e.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nconst Container = styled.div`\r\n  background: transparent;\r\n  padding: .5em 1em;\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;  \r\n  z-index: 99;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  boder-radius: .25em;\r\n  height: 35px;\r\n  width: 35px;\r\n`;\r\n\r\nconst User = styled.img`\r\nboder-radius: .25em;\r\nheight: 25px;\r\nwidth: 25px;\r\n`;\r\n\r\nconst Top = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Header = () => {\r\n  return (\r\n      <Container className=\"header\">\r\n        <Top>\r\n          <Logo src=\"media/netflix-big.png\" />\r\n          <User src=\"media/color-user.png\" />\r\n        </Top>\r\n      </Container>\r\n\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    height: 450px;\r\n    object-fit: contain;\r\n    position: relative;\r\n    margin-bottom: .5em;\r\n`;\r\n\r\nconst Image = styled.img`\r\n    width: 100%;\r\n    height: 450px;\r\n    max-height: 450px;\r\n`;\r\n\r\nconst Desc = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 1%;\r\n    width: 600px;\r\n    color: white;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    padding: .5em 1em;\r\n    margin: .25em;\r\n    color: #fff !important;\r\n    background: rgba(0,0,0,0.4);\r\n    border: none;\r\n    border-radius: .25em;\r\n    outline:none;\r\n    &:hover{\r\n        color: #000 !important;\r\n        background: #fff;\r\n    }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color: white;\r\n`;\r\n\r\nexport const DynamicTop = ({random}) => {\r\n    const baseUrl = 'https://image.tmdb.org/t/p/original/'\r\n    return (\r\n        <Container>\r\n            <Image src={baseUrl+random.poster_path}/>\r\n            <Desc >\r\n                <Title>{random.original_title}</Title><br />\r\n                <Button>Play</Button><Button>My List</Button>\r\n                <p>{random.overview}</p>\r\n            </Desc>\r\n        </Container>\r\n    )\r\n}\r\n","const API_KEY = '02684aad9559f0e07b9211530fb7f2c8';\r\nconst requests =  {\r\n    fetchtrending:`/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n    fetchTopRated:`/movie/top_rated?api_key=${API_KEY}&language=en=US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport './Row.css';\r\n\r\nconst Row = ({ title, fetchUrl, isLargeRow }) => {\r\n    const imageURL = 'https://image.tmdb.org/t/p/original/'\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        const request = await axios.get(fetchUrl);\r\n        setMovies(request.data.results);\r\n        return request;\r\n      }\r\n      fetchData();\r\n    }, [fetchUrl]); \r\n  \r\n    const opts = {\r\n      height: \"300\",\r\n      width: \"100%\",\r\n      playerVars: {\r\n        autoplay: 1,\r\n      },\r\n    };\r\n    const handleClick = (movie) => {\r\n      if (trailerUrl) {\r\n        setTrailerUrl(\"\");\r\n      }else{\r\n      movieTrailer(movie?.name || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n           })\r\n        .catch((error) => console.log(error));\r\n      }\r\n    };\r\n    return (\r\n      <div className=\"row\">\r\n        <h2>{title}</h2>\r\n        <div className=\"row-posters\">\r\n          {movies.map((movie) => {\r\n            return (\r\n              <img\r\n                key={movie.id}\r\n                onClick={() => handleClick(movie)}\r\n                className={`row-poster ${isLargeRow && \"row-posterLarge\"}`}\r\n                src={`${imageURL}${\r\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                }`}\r\n                alt={movie.name}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Row;","import './App.css';\r\nimport {Header} from './components/Header';\r\nimport { DynamicTop } from './components/DynamicTop'\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport requests from './urls';\r\nimport Row from './components/Row'\r\n\r\nconst baseURL = 'https://api.themoviedb.org/3';\r\n\r\nfunction App() {\r\n  const [randomMovie, setRandomMovie] = useState('')\r\n  \r\n  const findRandomMovie = async() =>{\r\n    const randomNo = Math.floor(Math.random()*500)\r\n    await axios.get(`${baseURL}/movie/${randomNo}?api_key=02684aad9559f0e07b9211530fb7f2c8`)\r\n    .then(res => {setRandomMovie(res.data)}).catch(err => {console.log(err)})\r\n  }\r\n  useEffect(() => {\r\n    findRandomMovie()\r\n  }, [])\r\n  \r\n  return (\r\n    <div>\r\n      <Header />\r\n      <DynamicTop random={randomMovie} />\r\n      <Row\r\n        title=\"Netfilx Orginals\"\r\n        fetchUrl={baseURL + requests.fetchNetflixOriginals}\r\n        isLargeRow\r\n      />\r\n      <Row title=\"Trending Now\" fetchUrl={baseURL + requests.fetchtrending} />\r\n      <Row title=\"Top Rated\" fetchUrl={baseURL + requests.fetchTopRated} />\r\n      <Row\r\n        title=\"Action Movies\"\r\n        fetchUrl={baseURL + requests.fetchActionMovies}\r\n      />\r\n      <Row\r\n        title=\"Comedy Movies\"\r\n        fetchUrl={baseURL + requests.fetchComedyMovies}\r\n      />\r\n      <Row\r\n        title=\"Horror Movies\"\r\n        fetchUrl={baseURL + requests.fetchHorrorMovies}\r\n      />\r\n      <Row\r\n        title=\"Romantic Movies\"\r\n        fetchUrl={baseURL + requests.fetchRomanceMovies}\r\n      />\r\n      <Row\r\n        title=\"Documentaries Movies\"\r\n        fetchUrl={baseURL + requests.fetchDocumentaries}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}